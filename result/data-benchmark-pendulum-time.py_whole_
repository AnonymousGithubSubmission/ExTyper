__repr__
def (data.benchmark.pendulum.time.Time) -> builtins.str
closest
def (self: data.benchmark.pendulum.time.Time, dt1: data.benchmark.pendulum.datetime.DateTime, dt2: data.benchmark.pendulum.datetime.DateTime) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: data.benchmark.pendulum.datetime.DateTime, dt2: data.benchmark.pendulum.time.Time) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: data.benchmark.pendulum.datetime.DateTime, dt2: datetime.datetime) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: data.benchmark.pendulum.datetime.DateTime, dt2: datetime.time) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: data.benchmark.pendulum.time.Time, dt2: data.benchmark.pendulum.datetime.DateTime) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: data.benchmark.pendulum.time.Time, dt2: data.benchmark.pendulum.time.Time) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: data.benchmark.pendulum.time.Time, dt2: datetime.datetime) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: data.benchmark.pendulum.time.Time, dt2: datetime.time) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: datetime.datetime, dt2: data.benchmark.pendulum.datetime.DateTime) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: datetime.datetime, dt2: data.benchmark.pendulum.time.Time) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: datetime.datetime, dt2: datetime.datetime) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: datetime.datetime, dt2: datetime.time) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: datetime.time, dt2: data.benchmark.pendulum.datetime.DateTime) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: datetime.time, dt2: data.benchmark.pendulum.time.Time) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: datetime.time, dt2: datetime.datetime) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: datetime.time, dt2: datetime.time) -> data.benchmark.pendulum.time.Time
replace
def (self: data.benchmark.pendulum.time.Time, hour: builtins.int =, minute: builtins.int =, second: builtins.int =, microsecond: builtins.int =, tzinfo: builtins.object =) -> data.benchmark.pendulum.time.Time
__getnewargs__
def (self: data.benchmark.pendulum.time.Time) -> Tuple[data.benchmark.pendulum.time.Time]
_get_state
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.float =) -> Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.int =) -> Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.object =) -> Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int]
__reduce_ex__
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.object) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
diff
def (self: data.benchmark.pendulum.time.Time, dt: data.benchmark.pendulum.time.Time =, abs: builtins.bool =) -> data.benchmark.pendulum.duration.Duration
def (self: data.benchmark.pendulum.time.Time, dt: data.benchmark.pendulum.time.Time =, abs: builtins.float =) -> data.benchmark.pendulum.duration.Duration
def (self: data.benchmark.pendulum.time.Time, dt: data.benchmark.pendulum.time.Time =, abs: builtins.int =) -> data.benchmark.pendulum.duration.Duration
def (self: data.benchmark.pendulum.time.Time, dt: data.benchmark.pendulum.time.Time =, abs: builtins.object =) -> data.benchmark.pendulum.duration.Duration
def (self: data.benchmark.pendulum.time.Time, dt: datetime.time =, abs: builtins.bool =) -> data.benchmark.pendulum.duration.Duration
def (self: data.benchmark.pendulum.time.Time, dt: datetime.time =, abs: builtins.float =) -> data.benchmark.pendulum.duration.Duration
def (self: data.benchmark.pendulum.time.Time, dt: datetime.time =, abs: builtins.int =) -> data.benchmark.pendulum.duration.Duration
def (self: data.benchmark.pendulum.time.Time, dt: datetime.time =, abs: builtins.object =) -> data.benchmark.pendulum.duration.Duration
farthest
def (self: data.benchmark.pendulum.time.Time, dt1: data.benchmark.pendulum.time.Time, dt2: data.benchmark.pendulum.time.Time) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: data.benchmark.pendulum.time.Time, dt2: datetime.time) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: datetime.time, dt2: data.benchmark.pendulum.time.Time) -> data.benchmark.pendulum.time.Time
def (self: data.benchmark.pendulum.time.Time, dt1: datetime.time, dt2: datetime.time) -> data.benchmark.pendulum.time.Time
add
def (self: data.benchmark.pendulum.time.Time, hours: builtins.int =, minutes: builtins.int =, seconds: builtins.int =, microseconds: builtins.int =) -> data.benchmark.pendulum.time.Time
subtract
def (self: data.benchmark.pendulum.time.Time, hours: builtins.int =, minutes: builtins.int =, seconds: builtins.int =, microseconds: builtins.int =) -> data.benchmark.pendulum.time.Time
add_timedelta
def (self: data.benchmark.pendulum.time.Time, delta: datetime.timedelta) -> data.benchmark.pendulum.time.Time
subtract_timedelta
def (self: data.benchmark.pendulum.time.Time, delta: datetime.timedelta) -> data.benchmark.pendulum.time.Time
__add__
def (data.benchmark.pendulum.time.Time, builtins.bool) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.bytes) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.dict[builtins.object, builtins.object]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.float) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.int) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.list[builtins.int]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.list[builtins.object]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.list[builtins.str]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.set[builtins.object]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.str) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum._extensions.helpers.PreciseDiff) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.date.Date) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.datetime.DateTime) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.formatting.formatter.Formatter) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.locales.locale.Locale) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.mixins.default.FormattableMixin) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.parsing._Interval) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.time.Time) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.reader.Reader) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.reader._offset) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.reader.header) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.transition.Transition) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.date) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.datetime) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.time) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.timedelta) -> Union[builtins._NotImplementedType, data.benchmark.pendulum.time.Time]
def (data.benchmark.pendulum.time.Time, datetime.timezone) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.tzinfo) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, typing.Match[Any]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, typing.Pattern[Any]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, typing.TypeVar) -> builtins._NotImplementedType
__sub__
def (data.benchmark.pendulum.time.Time, builtins.bool) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.bytes) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.dict[builtins.object, builtins.object]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.float) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.int) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.list[builtins.int]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.list[builtins.object]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.list[builtins.str]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.set[builtins.object]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.str) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum._extensions.helpers.PreciseDiff) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.date.Date) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.datetime.DateTime) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.formatting.formatter.Formatter) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.locales.locale.Locale) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.mixins.default.FormattableMixin) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.parsing._Interval) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.time.Time) -> Union[builtins._NotImplementedType, data.benchmark.pendulum.duration.Duration]
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.reader.Reader) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.reader._offset) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.reader.header) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.transition.Transition) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.date) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.datetime) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.timedelta) -> Union[builtins._NotImplementedType, data.benchmark.pendulum.time.Time]
def (data.benchmark.pendulum.time.Time, datetime.timezone) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.tzinfo) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, typing.Match[Any]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, typing.Pattern[Any]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, typing.TypeVar) -> builtins._NotImplementedType
__rsub__
def (data.benchmark.pendulum.time.Time, builtins.bool) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.bytes) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.dict[builtins.object, builtins.object]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.float) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.int) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.list[builtins.int]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.list[builtins.object]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.list[builtins.str]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.set[builtins.object]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, builtins.str) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum._extensions.helpers.PreciseDiff) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.date.Date) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.datetime.DateTime) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.formatting.formatter.Formatter) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.locales.locale.Locale) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.mixins.default.FormattableMixin) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.parsing._Interval) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.time.Time) -> Union[builtins._NotImplementedType, data.benchmark.pendulum.duration.Duration]
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.reader.Reader) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.reader._offset) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.reader.header) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.transition.Transition) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.date) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.datetime) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.timedelta) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.timezone) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, datetime.tzinfo) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, typing.Match[Any]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, typing.Pattern[Any]) -> builtins._NotImplementedType
def (data.benchmark.pendulum.time.Time, typing.TypeVar) -> builtins._NotImplementedType
__reduce_ex__
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.bool) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.bytes) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.dict[builtins.object, builtins.object]) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.float) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.int) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.list[builtins.int]) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.list[builtins.object]) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.list[builtins.str]) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.object) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.set[builtins.object]) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: builtins.str) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum._extensions.helpers.PreciseDiff) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.date.Date) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.datetime.DateTime) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.formatting.formatter.Formatter) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.locales.locale.Locale) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.mixins.default.FormattableMixin) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.parsing._Interval) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.time.Time) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.tz.zoneinfo.reader.Reader) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.tz.zoneinfo.reader._offset) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.tz.zoneinfo.reader.header) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.tz.zoneinfo.transition.Transition) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: datetime.date) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: datetime.datetime) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: datetime.time) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: datetime.timedelta) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: datetime.timezone) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: datetime.tzinfo) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: typing.Match[Any]) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: typing.Pattern[Any]) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
def (self: data.benchmark.pendulum.time.Time, protocol: typing.TypeVar) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
__reduce__
def (self: data.benchmark.pendulum.time.Time) -> Tuple[Tuple[Union[None, datetime.tzinfo], builtins.int, builtins.int, builtins.int, builtins.int], Type[data.benchmark.pendulum.time.Time]]
format
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.bool =, absolute: builtins.bool =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.bool =, absolute: builtins.float =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.bool =, absolute: builtins.int =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.bool =, absolute: builtins.object =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.float =, absolute: builtins.bool =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.float =, absolute: builtins.float =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.float =, absolute: builtins.int =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.float =, absolute: builtins.object =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.int =, absolute: builtins.bool =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.int =, absolute: builtins.float =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.int =, absolute: builtins.int =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.int =, absolute: builtins.object =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.object =, absolute: builtins.bool =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.object =, absolute: builtins.float =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.object =, absolute: builtins.int =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.object =, absolute: builtins.object =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.bool =, absolute: builtins.bool =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.bool =, absolute: builtins.float =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.bool =, absolute: builtins.int =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.bool =, absolute: builtins.object =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.float =, absolute: builtins.bool =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.float =, absolute: builtins.float =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.float =, absolute: builtins.int =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.float =, absolute: builtins.object =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.int =, absolute: builtins.bool =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.int =, absolute: builtins.float =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.int =, absolute: builtins.int =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.int =, absolute: builtins.object =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.object =, absolute: builtins.bool =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.object =, absolute: builtins.float =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.object =, absolute: builtins.int =, locale: Any =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, diff: data.benchmark.pendulum.period.Period, is_now: builtins.object =, absolute: builtins.object =, locale: Any =) -> Union[Any, builtins.object]
format_diff
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.bool =, absolute: builtins.bool =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.bool =, absolute: builtins.float =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.bool =, absolute: builtins.int =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.bool =, absolute: builtins.object =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.float =, absolute: builtins.bool =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.float =, absolute: builtins.float =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.float =, absolute: builtins.int =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.float =, absolute: builtins.object =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.int =, absolute: builtins.bool =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.int =, absolute: builtins.float =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.int =, absolute: builtins.int =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.int =, absolute: builtins.object =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.object =, absolute: builtins.bool =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.object =, absolute: builtins.float =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.object =, absolute: builtins.int =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.duration.Duration, is_now: builtins.object =, absolute: builtins.object =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.bool =, absolute: builtins.bool =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.bool =, absolute: builtins.float =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.bool =, absolute: builtins.int =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.bool =, absolute: builtins.object =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.float =, absolute: builtins.bool =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.float =, absolute: builtins.float =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.float =, absolute: builtins.int =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.float =, absolute: builtins.object =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.int =, absolute: builtins.bool =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.int =, absolute: builtins.float =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.int =, absolute: builtins.int =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.int =, absolute: builtins.object =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.object =, absolute: builtins.bool =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.object =, absolute: builtins.float =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.object =, absolute: builtins.int =, locale: builtins.object =) -> Union[Any, builtins.object]
def (diff: data.benchmark.pendulum.period.Period, is_now: builtins.object =, absolute: builtins.object =, locale: builtins.object =) -> Union[Any, builtins.object]
diff_for_humans
def (self: data.benchmark.pendulum.time.Time, other: data.benchmark.pendulum.time.Time =, absolute: builtins.bool =, locale: builtins.object =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.time.Time, other: data.benchmark.pendulum.time.Time =, absolute: builtins.float =, locale: builtins.object =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.time.Time, other: data.benchmark.pendulum.time.Time =, absolute: builtins.int =, locale: builtins.object =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.time.Time, other: data.benchmark.pendulum.time.Time =, absolute: builtins.object =, locale: builtins.object =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.time.Time, other: datetime.time =, absolute: builtins.bool =, locale: builtins.object =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.time.Time, other: datetime.time =, absolute: builtins.float =, locale: builtins.object =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.time.Time, other: datetime.time =, absolute: builtins.int =, locale: builtins.object =) -> Union[Any, builtins.object]
def (self: data.benchmark.pendulum.time.Time, other: datetime.time =, absolute: builtins.object =, locale: builtins.object =) -> Union[Any, builtins.object]
