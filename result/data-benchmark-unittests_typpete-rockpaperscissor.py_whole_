__init__
def (self: rockpaperscissor.Outcome, value: builtins.bool, name: builtins.str)
def (self: rockpaperscissor.Outcome, value: builtins.int, name: builtins.str)
compete
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
evalPaper
def (self: rockpaperscissor.Paper, item: builtins.object) -> rockpaperscissor.Outcome
evalScissors
def (self: rockpaperscissor.Paper, item: builtins.object) -> rockpaperscissor.Outcome
evalRock
def (self: rockpaperscissor.Paper, item: builtins.object) -> rockpaperscissor.Outcome
compete
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
evalPaper
def (self: rockpaperscissor.Scissors, item: builtins.object) -> rockpaperscissor.Outcome
evalScissors
def (self: rockpaperscissor.Scissors, item: builtins.object) -> rockpaperscissor.Outcome
evalRock
def (self: rockpaperscissor.Scissors, item: builtins.object) -> rockpaperscissor.Outcome
compete
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
evalPaper
def (self: rockpaperscissor.Rock, item: builtins.object) -> rockpaperscissor.Outcome
evalScissors
def (self: rockpaperscissor.Rock, item: builtins.object) -> rockpaperscissor.Outcome
evalRock
def (self: rockpaperscissor.Rock, item: builtins.object) -> rockpaperscissor.Outcome
evalRock
def (self: rockpaperscissor.Rock, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
evalRock
def (self: rockpaperscissor.Paper, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
evalRock
def (self: rockpaperscissor.Scissors, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
evalPaper
def (self: rockpaperscissor.Rock, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
evalPaper
def (self: rockpaperscissor.Paper, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
evalPaper
def (self: rockpaperscissor.Scissors, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
evalScissors
def (self: rockpaperscissor.Rock, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
evalScissors
def (self: rockpaperscissor.Paper, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
evalScissors
def (self: rockpaperscissor.Scissors, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
evalRock
def (self: rockpaperscissor.Rock, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
compete
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
evalRock
def (self: rockpaperscissor.Paper, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
evalRock
def (self: rockpaperscissor.Scissors, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
evalPaper
def (self: rockpaperscissor.Rock, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
compete
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
evalPaper
def (self: rockpaperscissor.Paper, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
evalPaper
def (self: rockpaperscissor.Scissors, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
evalScissors
def (self: rockpaperscissor.Rock, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Rock, item: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
compete
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
evalScissors
def (self: rockpaperscissor.Paper, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Paper, item: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
evalScissors
def (self: rockpaperscissor.Scissors, item: builtins.bool) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.bytes) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.dict[builtins.object, builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.float) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.int) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.int]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.list[builtins.str]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.object) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.set[builtins.object]) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: builtins.str) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Outcome) -> rockpaperscissor.Outcome
def (self: rockpaperscissor.Scissors, item: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
match
def (item1: rockpaperscissor.Item, item2: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Item, item2: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Item, item2: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Item, item2: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Paper, item2: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Paper, item2: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Paper, item2: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Paper, item2: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Rock, item2: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Rock, item2: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Rock, item2: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Rock, item2: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Scissors, item2: rockpaperscissor.Item) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Scissors, item2: rockpaperscissor.Paper) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Scissors, item2: rockpaperscissor.Rock) -> rockpaperscissor.Outcome
def (item1: rockpaperscissor.Scissors, item2: rockpaperscissor.Scissors) -> rockpaperscissor.Outcome
