_normalize
def (parsed: builtins.bool, options: Any) -> builtins.bool
def (parsed: builtins.bytes, options: Any) -> builtins.bytes
def (parsed: builtins.dict[builtins.bool, builtins.str], options: Any) -> builtins.dict[builtins.bool, builtins.str]
def (parsed: builtins.dict[builtins.bytes, builtins.str], options: Any) -> builtins.dict[builtins.bytes, builtins.str]
def (parsed: builtins.dict[builtins.float, builtins.str], options: Any) -> builtins.dict[builtins.float, builtins.str]
def (parsed: builtins.dict[builtins.int, builtins.str], options: Any) -> builtins.dict[builtins.int, builtins.str]
def (parsed: builtins.dict[builtins.object, builtins.object], options: Any) -> builtins.dict[builtins.object, builtins.object]
def (parsed: builtins.dict[builtins.object, builtins.str], options: Any) -> builtins.dict[builtins.object, builtins.str]
def (parsed: builtins.dict[builtins.str, builtins.str], options: Any) -> builtins.dict[builtins.str, builtins.str]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum._extensions.helpers.PreciseDiff], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum._extensions.helpers.PreciseDiff]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.date.Date], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.date.Date]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.datetime.DateTime], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.datetime.DateTime]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.formatting.formatter.Formatter], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.formatting.formatter.Formatter]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.locales.locale.Locale], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.locales.locale.Locale]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.mixins.default.FormattableMixin], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.mixins.default.FormattableMixin]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.parsing._Interval], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.parsing._Interval]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.time.Time], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.time.Time]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.Reader], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.Reader]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader._offset], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader._offset]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.header], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.header]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition.Transition], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition.Transition]
def (parsed: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType], options: Any) -> builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType]
def (parsed: builtins.dict[builtins.str, datetime.date], options: Any) -> builtins.dict[builtins.str, datetime.date]
def (parsed: builtins.dict[builtins.str, datetime.datetime], options: Any) -> builtins.dict[builtins.str, datetime.datetime]
def (parsed: builtins.dict[builtins.str, datetime.time], options: Any) -> builtins.dict[builtins.str, datetime.time]
def (parsed: builtins.dict[builtins.str, datetime.timedelta], options: Any) -> builtins.dict[builtins.str, datetime.timedelta]
def (parsed: builtins.dict[builtins.str, datetime.timezone], options: Any) -> builtins.dict[builtins.str, datetime.timezone]
def (parsed: builtins.dict[builtins.str, datetime.tzinfo], options: Any) -> builtins.dict[builtins.str, datetime.tzinfo]
def (parsed: builtins.dict[builtins.str, typing.TypeVar], options: Any) -> builtins.dict[builtins.str, typing.TypeVar]
def (parsed: builtins.float, options: Any) -> builtins.float
def (parsed: builtins.int, options: Any) -> builtins.int
def (parsed: builtins.list[builtins.bool], options: Any) -> builtins.list[builtins.bool]
def (parsed: builtins.list[builtins.bytes], options: Any) -> builtins.list[builtins.bytes]
def (parsed: builtins.list[builtins.float], options: Any) -> builtins.list[builtins.float]
def (parsed: builtins.list[builtins.int], options: Any) -> builtins.list[builtins.int]
def (parsed: builtins.list[builtins.object], options: Any) -> builtins.list[builtins.object]
def (parsed: builtins.list[builtins.str], options: Any) -> builtins.list[builtins.str]
def (parsed: builtins.list[data.benchmark.pendulum._extensions.helpers.PreciseDiff], options: Any) -> builtins.list[data.benchmark.pendulum._extensions.helpers.PreciseDiff]
def (parsed: builtins.list[data.benchmark.pendulum.date.Date], options: Any) -> builtins.list[data.benchmark.pendulum.date.Date]
def (parsed: builtins.list[data.benchmark.pendulum.datetime.DateTime], options: Any) -> builtins.list[data.benchmark.pendulum.datetime.DateTime]
def (parsed: builtins.list[data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter], options: Any) -> builtins.list[data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter]
def (parsed: builtins.list[data.benchmark.pendulum.formatting.formatter.Formatter], options: Any) -> builtins.list[data.benchmark.pendulum.formatting.formatter.Formatter]
def (parsed: builtins.list[data.benchmark.pendulum.locales.locale.Locale], options: Any) -> builtins.list[data.benchmark.pendulum.locales.locale.Locale]
def (parsed: builtins.list[data.benchmark.pendulum.mixins.default.FormattableMixin], options: Any) -> builtins.list[data.benchmark.pendulum.mixins.default.FormattableMixin]
def (parsed: builtins.list[data.benchmark.pendulum.parsing._Interval], options: Any) -> builtins.list[data.benchmark.pendulum.parsing._Interval]
def (parsed: builtins.list[data.benchmark.pendulum.time.Time], options: Any) -> builtins.list[data.benchmark.pendulum.time.Time]
def (parsed: builtins.list[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone], options: Any) -> builtins.list[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone]
def (parsed: builtins.list[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition], options: Any) -> builtins.list[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition]
def (parsed: builtins.list[data.benchmark.pendulum.tz.zoneinfo.reader.Reader], options: Any) -> builtins.list[data.benchmark.pendulum.tz.zoneinfo.reader.Reader]
def (parsed: builtins.list[data.benchmark.pendulum.tz.zoneinfo.reader._offset], options: Any) -> builtins.list[data.benchmark.pendulum.tz.zoneinfo.reader._offset]
def (parsed: builtins.list[data.benchmark.pendulum.tz.zoneinfo.reader.header], options: Any) -> builtins.list[data.benchmark.pendulum.tz.zoneinfo.reader.header]
def (parsed: builtins.list[data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone], options: Any) -> builtins.list[data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone]
def (parsed: builtins.list[data.benchmark.pendulum.tz.zoneinfo.transition.Transition], options: Any) -> builtins.list[data.benchmark.pendulum.tz.zoneinfo.transition.Transition]
def (parsed: builtins.list[data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType], options: Any) -> builtins.list[data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType]
def (parsed: builtins.list[datetime.date], options: Any) -> builtins.list[datetime.date]
def (parsed: builtins.list[datetime.datetime], options: Any) -> builtins.list[datetime.datetime]
def (parsed: builtins.list[datetime.time], options: Any) -> builtins.list[datetime.time]
def (parsed: builtins.list[datetime.timedelta], options: Any) -> builtins.list[datetime.timedelta]
def (parsed: builtins.list[datetime.timezone], options: Any) -> builtins.list[datetime.timezone]
def (parsed: builtins.list[datetime.tzinfo], options: Any) -> builtins.list[datetime.tzinfo]
def (parsed: builtins.list[typing.TypeVar], options: Any) -> builtins.list[typing.TypeVar]
def (parsed: builtins.set[builtins.bool], options: Any) -> builtins.set[builtins.bool]
def (parsed: builtins.set[builtins.bytes], options: Any) -> builtins.set[builtins.bytes]
def (parsed: builtins.set[builtins.float], options: Any) -> builtins.set[builtins.float]
def (parsed: builtins.set[builtins.int], options: Any) -> builtins.set[builtins.int]
def (parsed: builtins.set[builtins.object], options: Any) -> builtins.set[builtins.object]
def (parsed: builtins.set[builtins.str], options: Any) -> builtins.set[builtins.str]
def (parsed: builtins.set[data.benchmark.pendulum._extensions.helpers.PreciseDiff], options: Any) -> builtins.set[data.benchmark.pendulum._extensions.helpers.PreciseDiff]
def (parsed: builtins.set[data.benchmark.pendulum.date.Date], options: Any) -> builtins.set[data.benchmark.pendulum.date.Date]
def (parsed: builtins.set[data.benchmark.pendulum.datetime.DateTime], options: Any) -> builtins.set[data.benchmark.pendulum.datetime.DateTime]
def (parsed: builtins.set[data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter], options: Any) -> builtins.set[data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter]
def (parsed: builtins.set[data.benchmark.pendulum.formatting.formatter.Formatter], options: Any) -> builtins.set[data.benchmark.pendulum.formatting.formatter.Formatter]
def (parsed: builtins.set[data.benchmark.pendulum.locales.locale.Locale], options: Any) -> builtins.set[data.benchmark.pendulum.locales.locale.Locale]
def (parsed: builtins.set[data.benchmark.pendulum.mixins.default.FormattableMixin], options: Any) -> builtins.set[data.benchmark.pendulum.mixins.default.FormattableMixin]
def (parsed: builtins.set[data.benchmark.pendulum.parsing._Interval], options: Any) -> builtins.set[data.benchmark.pendulum.parsing._Interval]
def (parsed: builtins.set[data.benchmark.pendulum.time.Time], options: Any) -> builtins.set[data.benchmark.pendulum.time.Time]
def (parsed: builtins.set[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone], options: Any) -> builtins.set[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone]
def (parsed: builtins.set[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition], options: Any) -> builtins.set[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition]
def (parsed: builtins.set[data.benchmark.pendulum.tz.zoneinfo.reader.Reader], options: Any) -> builtins.set[data.benchmark.pendulum.tz.zoneinfo.reader.Reader]
def (parsed: builtins.set[data.benchmark.pendulum.tz.zoneinfo.reader._offset], options: Any) -> builtins.set[data.benchmark.pendulum.tz.zoneinfo.reader._offset]
def (parsed: builtins.set[data.benchmark.pendulum.tz.zoneinfo.reader.header], options: Any) -> builtins.set[data.benchmark.pendulum.tz.zoneinfo.reader.header]
def (parsed: builtins.set[data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone], options: Any) -> builtins.set[data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone]
def (parsed: builtins.set[data.benchmark.pendulum.tz.zoneinfo.transition.Transition], options: Any) -> builtins.set[data.benchmark.pendulum.tz.zoneinfo.transition.Transition]
def (parsed: builtins.set[data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType], options: Any) -> builtins.set[data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType]
def (parsed: builtins.set[datetime.date], options: Any) -> builtins.set[datetime.date]
def (parsed: builtins.set[datetime.datetime], options: Any) -> builtins.set[datetime.datetime]
def (parsed: builtins.set[datetime.time], options: Any) -> builtins.set[datetime.time]
def (parsed: builtins.set[datetime.timedelta], options: Any) -> builtins.set[datetime.timedelta]
def (parsed: builtins.set[datetime.timezone], options: Any) -> builtins.set[datetime.timezone]
def (parsed: builtins.set[datetime.tzinfo], options: Any) -> builtins.set[datetime.tzinfo]
def (parsed: builtins.set[typing.TypeVar], options: Any) -> builtins.set[typing.TypeVar]
def (parsed: builtins.str, options: Any) -> builtins.str
def (parsed: data.benchmark.pendulum._extensions.helpers.PreciseDiff, options: Any) -> data.benchmark.pendulum._extensions.helpers.PreciseDiff
def (parsed: data.benchmark.pendulum.datetime.DateTime, options: Any) -> data.benchmark.pendulum.datetime.DateTime
def (parsed: data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter, options: Any) -> data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter
def (parsed: data.benchmark.pendulum.formatting.formatter.Formatter, options: Any) -> data.benchmark.pendulum.formatting.formatter.Formatter
def (parsed: data.benchmark.pendulum.locales.locale.Locale, options: Any) -> data.benchmark.pendulum.locales.locale.Locale
def (parsed: data.benchmark.pendulum.mixins.default.FormattableMixin, options: Any) -> data.benchmark.pendulum.mixins.default.FormattableMixin
def (parsed: data.benchmark.pendulum.parsing._Interval, options: Any) -> data.benchmark.pendulum.parsing._Interval
def (parsed: data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone, options: Any) -> data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone
def (parsed: data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition, options: Any) -> data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition
def (parsed: data.benchmark.pendulum.tz.zoneinfo.reader.Reader, options: Any) -> data.benchmark.pendulum.tz.zoneinfo.reader.Reader
def (parsed: data.benchmark.pendulum.tz.zoneinfo.reader._offset, options: Any) -> data.benchmark.pendulum.tz.zoneinfo.reader._offset
def (parsed: data.benchmark.pendulum.tz.zoneinfo.reader.header, options: Any) -> data.benchmark.pendulum.tz.zoneinfo.reader.header
def (parsed: data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone, options: Any) -> data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone
def (parsed: data.benchmark.pendulum.tz.zoneinfo.transition.Transition, options: Any) -> data.benchmark.pendulum.tz.zoneinfo.transition.Transition
def (parsed: data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType, options: Any) -> data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType
def (parsed: datetime.datetime, options: Any) -> datetime.datetime
def (parsed: datetime.timedelta, options: Any) -> datetime.timedelta
def (parsed: datetime.timezone, options: Any) -> datetime.timezone
def (parsed: datetime.tzinfo, options: Any) -> datetime.tzinfo
def (parsed: typing.Match[Any], options: Any) -> typing.Match[Any]
def (parsed: typing.Pattern[Any], options: Any) -> typing.Pattern[Any]
def (parsed: typing.TypeVar, options: Any) -> typing.TypeVar
_parse_common
def (text: builtins.str, options: builtins.dict[builtins.bool, builtins.str]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.bytes, builtins.str]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.float, builtins.str]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.int, builtins.str]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.object, builtins.object]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.object, builtins.str]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, builtins.str]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum._extensions.helpers.PreciseDiff]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.date.Date]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.datetime.DateTime]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.formatting.formatter.Formatter]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.locales.locale.Locale]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.mixins.default.FormattableMixin]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.parsing._Interval]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.time.Time]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.Reader]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader._offset]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.header]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition.Transition]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.date]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.datetime]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.time]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.timedelta]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.timezone]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.tzinfo]) -> datetime.date
def (text: builtins.str, options: builtins.dict[builtins.str, typing.TypeVar]) -> datetime.date
def (text: builtins.str, options: typing.Match[Any]) -> datetime.date
__init__
def (self: data.benchmark.pendulum.parsing._Interval, start: builtins.bool =, end: builtins.bool =, duration: builtins.bool =)
def (self: data.benchmark.pendulum.parsing._Interval, start: builtins.bool =, end: builtins.bool =, duration: builtins.int =)
def (self: data.benchmark.pendulum.parsing._Interval, start: builtins.bool =, end: builtins.int =, duration: builtins.bool =)
def (self: data.benchmark.pendulum.parsing._Interval, start: builtins.bool =, end: builtins.int =, duration: builtins.int =)
def (self: data.benchmark.pendulum.parsing._Interval, start: builtins.int =, end: builtins.bool =, duration: builtins.bool =)
def (self: data.benchmark.pendulum.parsing._Interval, start: builtins.int =, end: builtins.bool =, duration: builtins.int =)
def (self: data.benchmark.pendulum.parsing._Interval, start: builtins.int =, end: builtins.int =, duration: builtins.bool =)
def (self: data.benchmark.pendulum.parsing._Interval, start: builtins.int =, end: builtins.int =, duration: builtins.int =)
_parse_iso8601_interval
def (text: builtins.str) -> Any
_parse
def (text: builtins.str, options: builtins.dict[builtins.bool, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.bytes, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.float, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.int, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.object, builtins.object]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.object, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum._extensions.helpers.PreciseDiff]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.date.Date]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.datetime.DateTime]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.formatting.formatter.Formatter]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.locales.locale.Locale]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.mixins.default.FormattableMixin]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.parsing._Interval]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.time.Time]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.Reader]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader._offset]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.header]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition.Transition]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.date]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.datetime]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.time]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.timedelta]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.timezone]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.tzinfo]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, typing.TypeVar]) -> Union[Any, datetime.date]
parse
def (text: Any, options: builtins.dict[builtins.bool, builtins.str]) -> Any
def (text: Any, options: builtins.list[data.benchmark.pendulum.tz.zoneinfo.reader._offset]) -> Any
def (text: Any, options: builtins.list[data.benchmark.pendulum.tz.zoneinfo.reader.header]) -> Any
def (text: Any, options: builtins.set[data.benchmark.pendulum.tz.zoneinfo.reader._offset]) -> Any
def (text: Any, options: builtins.set[data.benchmark.pendulum.tz.zoneinfo.reader.header]) -> Any
def (text: Any, options: data.benchmark.pendulum.tz.zoneinfo.reader._offset) -> Any
def (text: Any, options: data.benchmark.pendulum.tz.zoneinfo.reader.header) -> Any
_parse
def (text: builtins.str, options: builtins.dict[builtins.bool, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.bytes, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.float, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.int, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.object, builtins.object]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.object, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, builtins.str]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum._extensions.helpers.PreciseDiff]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.date.Date]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.datetime.DateTime]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.formatting.formatter.Formatter]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.locales.locale.Locale]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.mixins.default.FormattableMixin]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.parsing._Interval]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.time.Time]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.Reader]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader._offset]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.header]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition.Transition]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.date]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.datetime]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.time]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.timedelta]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.timezone]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, datetime.tzinfo]) -> Union[Any, datetime.date]
def (text: builtins.str, options: builtins.dict[builtins.str, typing.TypeVar]) -> Union[Any, datetime.date]
