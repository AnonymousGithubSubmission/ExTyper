__init__
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.object =)
_parse_str
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.str)
_parse_int
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.bool)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.int)
from_values
def (isd: builtins.bool, as_: builtins.bool) -> data.benchmark.scion.lib.packet.scion_addr.ISD_AS
def (isd: builtins.bool, as_: builtins.int) -> data.benchmark.scion.lib.packet.scion_addr.ISD_AS
def (isd: builtins.int, as_: builtins.bool) -> data.benchmark.scion.lib.packet.scion_addr.ISD_AS
def (isd: builtins.int, as_: builtins.int) -> data.benchmark.scion.lib.packet.scion_addr.ISD_AS
int
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS) -> builtins.int
any_as
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS) -> data.benchmark.scion.lib.packet.scion_addr.ISD_AS
params
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, name: builtins.object =) -> Union[builtins.dict[builtins.int, builtins.str], builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.ISD_AS]]
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, name: builtins.str =) -> Union[builtins.dict[builtins.int, builtins.str], builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.ISD_AS]]
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, name: typing.Sized =) -> Union[builtins.dict[builtins.int, builtins.str], builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.ISD_AS]]
__eq__
def (data.benchmark.scion.lib.packet.scion_addr.ISD_AS, data.benchmark.scion.lib.packet.scion_addr.ISD_AS) -> builtins.bool
__getitem__
def (data.benchmark.scion.lib.packet.scion_addr.ISD_AS, builtins.object) -> builtins.int
__int__
def (data.benchmark.scion.lib.packet.scion_addr.ISD_AS) -> builtins.int
__iter__
def (data.benchmark.scion.lib.packet.scion_addr.ISD_AS) -> builtins.list[builtins.int]
__str__
def (data.benchmark.scion.lib.packet.scion_addr.ISD_AS) -> builtins.str
__repr__
def (data.benchmark.scion.lib.packet.scion_addr.ISD_AS) -> builtins.str
__len__
def (data.benchmark.scion.lib.packet.scion_addr.ISD_AS) -> builtins.int
__hash__
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS) -> builtins.int
from_values
def (isd_as: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, host: Any) -> data.benchmark.scion.lib.packet.scion_addr.SCIONAddr
calc_len
def (type_: builtins.bool) -> builtins.int
def (type_: builtins.int) -> builtins.int
__len__
def (data.benchmark.scion.lib.packet.scion_addr.SCIONAddr) -> builtins.int
__eq__
def (data.benchmark.scion.lib.packet.scion_addr.SCIONAddr, data.benchmark.scion.lib.packet.scion_addr.SCIONAddr) -> builtins.bool
__str__
def (data.benchmark.scion.lib.packet.scion_addr.SCIONAddr) -> builtins.str
__init__
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy)
get_path_policy_dict
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy) -> builtins.dict[builtins.object, builtins.str]
_check_unwanted_ases
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, pcb: data.benchmark.scion.lib.packet.scion_addr.PathSegment) -> data.benchmark.scion.lib.packet.scion_addr.ISD_AS
_check_range
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.object], name: builtins.str, actual: builtins.bool)
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.object], name: builtins.str, actual: builtins.bytes)
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.object], name: builtins.str, actual: builtins.float)
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.object], name: builtins.str, actual: builtins.int)
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.object], name: builtins.str, actual: builtins.list[builtins.int])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.object], name: builtins.str, actual: builtins.list[builtins.object])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.object], name: builtins.str, actual: builtins.list[builtins.str])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.object], name: builtins.str, actual: builtins.set[builtins.object])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.object], name: builtins.str, actual: builtins.str)
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.str], name: builtins.str, actual: builtins.bool)
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.str], name: builtins.str, actual: builtins.bytes)
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.str], name: builtins.str, actual: builtins.float)
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.str], name: builtins.str, actual: builtins.int)
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.str], name: builtins.str, actual: builtins.list[builtins.int])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.str], name: builtins.str, actual: builtins.list[builtins.object])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.str], name: builtins.str, actual: builtins.list[builtins.str])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.str], name: builtins.str, actual: builtins.set[builtins.object])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, reasons: builtins.list[builtins.str], name: builtins.str, actual: builtins.str)
_check_property_ranges
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, pcb: data.benchmark.scion.lib.packet.scion_addr.PathSegment) -> <partial list[?]>
_check_remote_ifid
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, pcb: data.benchmark.scion.lib.packet.scion_addr.PathSegment) -> data.benchmark.scion.lib.packet.scion_addr.ISD_AS
__str__
def (data.benchmark.scion.lib.packet.scion_addr.PathPolicy) -> Any
update
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStoreRecord, pcb: data.benchmark.scion.lib.packet.scion_addr.PathSegment)
sending
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStoreRecord)
update_fidelity
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStoreRecord, path_policy: data.benchmark.scion.lib.packet.scion_addr.PathPolicy)
__eq__
def (data.benchmark.scion.lib.packet.scion_addr.PathStoreRecord, data.benchmark.scion.lib.packet.scion_addr.PathStoreRecord) -> builtins.bool
__str__
def (data.benchmark.scion.lib.packet.scion_addr.PathStoreRecord) -> builtins.str
_update_disjointness_db
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore)
_update_all_disjointness
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore)
_update_all_delay_time
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore)
_update_all_fidelity
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore)
get_latest_history_snapshot
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, k: builtins.int =) -> builtins.list[Any]
remove_segments
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, rec_ids: builtins.bytes)
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, rec_ids: builtins.dict[builtins.object, builtins.object])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, rec_ids: builtins.list[builtins.int])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, rec_ids: builtins.list[builtins.object])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, rec_ids: builtins.list[builtins.str])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, rec_ids: builtins.set[builtins.object])
get_segment
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, rec_id: builtins.bool) -> data.benchmark.scion.lib.packet.scion_addr.PathSegment
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, rec_id: builtins.int) -> data.benchmark.scion.lib.packet.scion_addr.PathSegment
__str__
def (data.benchmark.scion.lib.packet.scion_addr.PathStore) -> builtins.str
_parse_bytes
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.bytes)
pack
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS) -> builtins.bytes
__init__
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.bool =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.bytes =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.dict[builtins.object, builtins.object] =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.float =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.int =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.list[builtins.int] =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.list[builtins.object] =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.list[builtins.str] =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.object =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.set[builtins.object] =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.str =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.opaque_field.OpaqueFieldList =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.packet_base.Cerealizable =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.packet_base.Serializable =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.scion_addr.ASMarking =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.scion_addr.ISD_AS =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.scion_addr.PCBMarking =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.scion_addr.PPCBMarking =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.scion_addr.PathPolicy =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.scion_addr.PathSegment =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.scion_addr.PathStore =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.scion_addr.PathStoreRecord =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.packet.scion_addr.SCIONAddr =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.types.CertMgmtType =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.types.PathMgmtType =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.types.PayloadClass =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.types.TypeBase =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.util.Raw =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: data.benchmark.scion.lib.util.SCIONTime =)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: typing.Sized =)
_parse
def (self: data.benchmark.scion.lib.packet.scion_addr.SCIONAddr, addr_type: builtins.bool, raw: builtins.bytes)
def (self: data.benchmark.scion.lib.packet.scion_addr.SCIONAddr, addr_type: builtins.int, raw: builtins.bytes)
pack
def (self: data.benchmark.scion.lib.packet.scion_addr.SCIONAddr) -> builtins.bytes
parse_dict
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.object, builtins.object])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: data.benchmark.scion.lib.packet.scion_addr.ISD_AS)
_remove_expired_segments
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore)
_parse
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.bool)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.bytes)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.int)
def (self: data.benchmark.scion.lib.packet.scion_addr.ISD_AS, raw: builtins.str)
__init__
def (self: data.benchmark.scion.lib.packet.scion_addr.SCIONAddr, addr_info: builtins.bool =)
def (self: data.benchmark.scion.lib.packet.scion_addr.SCIONAddr, addr_info: builtins.float =)
def (self: data.benchmark.scion.lib.packet.scion_addr.SCIONAddr, addr_info: builtins.int =)
def (self: data.benchmark.scion.lib.packet.scion_addr.SCIONAddr, addr_info: builtins.object =)
_check_unwanted_ases
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, pcb: data.benchmark.scion.lib.packet.scion_addr.PathSegment) -> data.benchmark.scion.lib.packet.scion_addr.ISD_AS
_trim_candidates
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore)
get_best_segments
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, k: builtins.int =, sending: builtins.bool =) -> builtins.list[data.benchmark.scion.lib.packet.scion_addr.PathSegment]
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, k: builtins.int =, sending: builtins.float =) -> builtins.list[data.benchmark.scion.lib.packet.scion_addr.PathSegment]
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, k: builtins.int =, sending: builtins.int =) -> builtins.list[data.benchmark.scion.lib.packet.scion_addr.PathSegment]
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, k: builtins.int =, sending: builtins.object =) -> builtins.list[data.benchmark.scion.lib.packet.scion_addr.PathSegment]
_check_remote_ifid
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, pcb: data.benchmark.scion.lib.packet.scion_addr.PathSegment) -> data.benchmark.scion.lib.packet.scion_addr.ISD_AS
check_filters
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, pcb: data.benchmark.scion.lib.packet.scion_addr.PathSegment) -> builtins.bool
parse_dict
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[Any, builtins.str])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.bool, builtins.str])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.bytes, builtins.str])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.float, builtins.str])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.int, builtins.str])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.object, builtins.object])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.object, builtins.str])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, builtins.str])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.opaque_field.OpaqueFieldList])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.packet_base.Cerealizable])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.packet_base.Serializable])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.ASMarking])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.ISD_AS])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PCBMarking])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PPCBMarking])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PathPolicy])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PathSegment])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PathStoreRecord])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PathStore])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.SCIONAddr])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.types.CertMgmtType])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.types.PathMgmtType])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.types.PayloadClass])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.types.TypeBase])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.util.Raw])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, data.benchmark.scion.lib.util.SCIONTime])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: builtins.dict[builtins.str, typing.Sized])
def (self: data.benchmark.scion.lib.packet.scion_addr.PathPolicy, path_policy: data.benchmark.scion.lib.packet.scion_addr.ISD_AS)
from_dict
def (policy_dict: builtins.dict[Any, builtins.str]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.bool, builtins.str]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.bytes, builtins.str]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.float, builtins.str]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.int, builtins.str]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.object, builtins.object]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.object, builtins.str]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, builtins.str]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.opaque_field.OpaqueFieldList]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.packet_base.Cerealizable]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.packet_base.Serializable]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.ASMarking]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.ISD_AS]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PCBMarking]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PPCBMarking]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PathPolicy]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PathSegment]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PathStoreRecord]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.PathStore]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.packet.scion_addr.SCIONAddr]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.types.CertMgmtType]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.types.PathMgmtType]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.types.PayloadClass]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.types.TypeBase]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.util.Raw]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, data.benchmark.scion.lib.util.SCIONTime]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: builtins.dict[builtins.str, typing.Sized]) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
def (policy_dict: data.benchmark.scion.lib.packet.scion_addr.ISD_AS) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
from_file
def (policy_file: builtins.str) -> data.benchmark.scion.lib.packet.scion_addr.PathPolicy
add_segment
def (self: data.benchmark.scion.lib.packet.scion_addr.PathStore, pcb: data.benchmark.scion.lib.packet.scion_addr.PathSegment)
