format
def (self: data.benchmark.pendulum.mixins.default.FormattableMixin, fmt: builtins.str, locale: builtins.str =) -> builtins.str
def (self: data.benchmark.pendulum.mixins.default.FormattableMixin, fmt: builtins.str, locale: data.benchmark.pendulum.locales.locale.Locale =) -> builtins.str
for_json
def (self: data.benchmark.pendulum.mixins.default.FormattableMixin) -> builtins.str
__str__
def (Any) -> Any
format
def (self: data.benchmark.pendulum.mixins.default.FormattableMixin, fmt: builtins.str, locale: builtins.str =) -> builtins.str
def (self: data.benchmark.pendulum.mixins.default.FormattableMixin, fmt: builtins.str, locale: data.benchmark.pendulum.locales.locale.Locale =) -> builtins.str
__format__
def (self: Any, format_spec: builtins.dict[builtins.bool, builtins.str]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.bytes, builtins.str]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.float, builtins.str]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.int, builtins.str]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.object, builtins.object]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.object, builtins.str]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, builtins.str]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum._extensions.helpers.PreciseDiff]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.date.Date]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.datetime.DateTime]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.formatting.formatter.Formatter]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.locales.locale.Locale]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.mixins.default.FormattableMixin]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.parsing._Interval]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.time.Time]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.Reader]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader._offset]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.reader.header]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition.Transition]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, datetime.date]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, datetime.datetime]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, datetime.time]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, datetime.timedelta]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, datetime.timezone]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, datetime.tzinfo]) -> Any
def (self: Any, format_spec: builtins.dict[builtins.str, typing.TypeVar]) -> Any
def (self: Any, format_spec: builtins.list[builtins.bool]) -> Any
def (self: Any, format_spec: builtins.list[builtins.bytes]) -> Any
def (self: Any, format_spec: builtins.list[builtins.float]) -> Any
def (self: Any, format_spec: builtins.list[builtins.int]) -> Any
def (self: Any, format_spec: builtins.list[builtins.object]) -> Any
def (self: Any, format_spec: builtins.list[builtins.str]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum._extensions.helpers.PreciseDiff]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.date.Date]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.datetime.DateTime]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.formatting.formatter.Formatter]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.locales.locale.Locale]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.mixins.default.FormattableMixin]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.parsing._Interval]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.time.Time]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.tz.zoneinfo.reader.Reader]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.tz.zoneinfo.reader._offset]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.tz.zoneinfo.reader.header]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.tz.zoneinfo.transition.Transition]) -> Any
def (self: Any, format_spec: builtins.list[data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType]) -> Any
def (self: Any, format_spec: builtins.list[datetime.date]) -> Any
def (self: Any, format_spec: builtins.list[datetime.datetime]) -> Any
def (self: Any, format_spec: builtins.list[datetime.time]) -> Any
def (self: Any, format_spec: builtins.list[datetime.timedelta]) -> Any
def (self: Any, format_spec: builtins.list[datetime.timezone]) -> Any
def (self: Any, format_spec: builtins.list[datetime.tzinfo]) -> Any
def (self: Any, format_spec: builtins.list[typing.TypeVar]) -> Any
def (self: Any, format_spec: builtins.set[builtins.bool]) -> Any
def (self: Any, format_spec: builtins.set[builtins.bytes]) -> Any
def (self: Any, format_spec: builtins.set[builtins.float]) -> Any
def (self: Any, format_spec: builtins.set[builtins.int]) -> Any
def (self: Any, format_spec: builtins.set[builtins.object]) -> Any
def (self: Any, format_spec: builtins.set[builtins.str]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum._extensions.helpers.PreciseDiff]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.date.Date]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.datetime.DateTime]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.formatting.difference_formatter.DifferenceFormatter]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.formatting.formatter.Formatter]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.locales.locale.Locale]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.mixins.default.FormattableMixin]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.parsing._Interval]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.time.Time]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTimezone]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.tz.zoneinfo.posix_timezone.PosixTransition]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.tz.zoneinfo.reader.Reader]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.tz.zoneinfo.reader._offset]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.tz.zoneinfo.reader.header]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.tz.zoneinfo.timezone.Timezone]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.tz.zoneinfo.transition.Transition]) -> Any
def (self: Any, format_spec: builtins.set[data.benchmark.pendulum.tz.zoneinfo.transition_type.TransitionType]) -> Any
def (self: Any, format_spec: builtins.set[datetime.date]) -> Any
def (self: Any, format_spec: builtins.set[datetime.datetime]) -> Any
def (self: Any, format_spec: builtins.set[datetime.time]) -> Any
def (self: Any, format_spec: builtins.set[datetime.timedelta]) -> Any
def (self: Any, format_spec: builtins.set[datetime.timezone]) -> Any
def (self: Any, format_spec: builtins.set[datetime.tzinfo]) -> Any
def (self: Any, format_spec: builtins.set[typing.TypeVar]) -> Any
def (self: Any, format_spec: builtins.str) -> Any
def (self: Any, format_spec: data.benchmark.pendulum.tz.zoneinfo.reader._offset) -> Any
def (self: Any, format_spec: data.benchmark.pendulum.tz.zoneinfo.reader.header) -> Any
